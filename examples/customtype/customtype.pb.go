// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customtype.proto

/*
Package customtype is a generated protocol buffer package.

It is generated from these files:
	customtype.proto

It has these top-level messages:
	GetUserInfoRequest
	GetUserInfoResponse
	UpdateUserInfoRequest
	UpdateUserInfoResponse
*/
package customtype

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/ilius/gragen/examples/customtype/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserInfoRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetUserInfoRequest) Reset()                    { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()               {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserInfoRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserInfoResponse struct {
	UserInfo *types.User `protobuf:"bytes,1,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *GetUserInfoResponse) Reset()                    { *m = GetUserInfoResponse{} }
func (m *GetUserInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoResponse) ProtoMessage()               {}
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserInfoResponse) GetUserInfo() *types.User {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type UpdateUserInfoRequest struct {
	UserInfo *types.User `protobuf:"bytes,1,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *UpdateUserInfoRequest) Reset()                    { *m = UpdateUserInfoRequest{} }
func (m *UpdateUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserInfoRequest) ProtoMessage()               {}
func (*UpdateUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateUserInfoRequest) GetUserInfo() *types.User {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type UpdateUserInfoResponse struct {
}

func (m *UpdateUserInfoResponse) Reset()                    { *m = UpdateUserInfoResponse{} }
func (m *UpdateUserInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserInfoResponse) ProtoMessage()               {}
func (*UpdateUserInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*GetUserInfoRequest)(nil), "customtype.GetUserInfoRequest")
	proto.RegisterType((*GetUserInfoResponse)(nil), "customtype.GetUserInfoResponse")
	proto.RegisterType((*UpdateUserInfoRequest)(nil), "customtype.UpdateUserInfoRequest")
	proto.RegisterType((*UpdateUserInfoResponse)(nil), "customtype.UpdateUserInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Customtype service

type CustomtypeClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
}

type customtypeClient struct {
	cc *grpc.ClientConn
}

func NewCustomtypeClient(cc *grpc.ClientConn) CustomtypeClient {
	return &customtypeClient{cc}
}

func (c *customtypeClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := grpc.Invoke(ctx, "/customtype.customtype/GetUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customtypeClient) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	out := new(UpdateUserInfoResponse)
	err := grpc.Invoke(ctx, "/customtype.customtype/UpdateUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Customtype service

type CustomtypeServer interface {
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	UpdateUserInfo(context.Context, *UpdateUserInfoRequest) (*UpdateUserInfoResponse, error)
}

func RegisterCustomtypeServer(s *grpc.Server, srv CustomtypeServer) {
	s.RegisterService(&_Customtype_serviceDesc, srv)
}

func _Customtype_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomtypeServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customtype.customtype/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomtypeServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customtype_UpdateUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomtypeServer).UpdateUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customtype.customtype/UpdateUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomtypeServer).UpdateUserInfo(ctx, req.(*UpdateUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customtype_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customtype.customtype",
	HandlerType: (*CustomtypeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _Customtype_GetUserInfo_Handler,
		},
		{
			MethodName: "UpdateUserInfo",
			Handler:    _Customtype_UpdateUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customtype.proto",
}

func init() { proto.RegisterFile("customtype.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x2e, 0x2d, 0x2e,
	0xc9, 0xcf, 0x2d, 0xa9, 0x2c, 0x48, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x48, 0xd9, 0xa6, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x67, 0xe6, 0x64,
	0x96, 0x16, 0xeb, 0xa7, 0x17, 0x25, 0xa6, 0xa7, 0xe6, 0xe9, 0xa7, 0x56, 0x24, 0xe6, 0x16, 0xe4,
	0xa4, 0x16, 0xeb, 0x23, 0x14, 0xeb, 0x83, 0x88, 0x62, 0x08, 0x09, 0x31, 0x4a, 0x49, 0x87, 0x4b,
	0xc8, 0x3d, 0xb5, 0x24, 0xb4, 0x38, 0xb5, 0xc8, 0x33, 0x2f, 0x2d, 0x3f, 0x28, 0xb5, 0xb0, 0x34,
	0xb5, 0xb8, 0x44, 0x48, 0x8c, 0x8b, 0xad, 0x14, 0x24, 0x94, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1,
	0x19, 0x04, 0xe5, 0x29, 0xd9, 0x71, 0x09, 0xa3, 0xa8, 0x2e, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15,
	0x52, 0xe7, 0xe2, 0x28, 0x85, 0x8a, 0x81, 0x35, 0x70, 0x1b, 0x71, 0xeb, 0x41, 0x2c, 0x01, 0x29,
	0x0d, 0x82, 0x4b, 0x2a, 0x39, 0x70, 0x89, 0x86, 0x16, 0xa4, 0x24, 0x96, 0xa4, 0xa2, 0x5b, 0x48,
	0xb4, 0x09, 0x12, 0x5c, 0x62, 0xe8, 0x26, 0x40, 0x1c, 0x61, 0xb4, 0x93, 0x91, 0x0b, 0x29, 0x5c,
	0x84, 0x02, 0xb8, 0xb8, 0x91, 0x9c, 0x2a, 0x24, 0xa7, 0x87, 0x14, 0x8a, 0x98, 0x3e, 0x96, 0x92,
	0xc7, 0x29, 0x0f, 0x31, 0x5e, 0x89, 0x41, 0x28, 0x92, 0x8b, 0x0f, 0xd5, 0x6a, 0x21, 0x45, 0x64,
	0x4d, 0x58, 0x3d, 0x26, 0xa5, 0x84, 0x4f, 0x09, 0xcc, 0xe8, 0x24, 0x36, 0x70, 0x64, 0x18, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x39, 0xcd, 0x55, 0xeb, 0x01, 0x00, 0x00,
}
